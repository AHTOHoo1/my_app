.form__field {
    font-size: 14px;
    border-radius: 6px;
    line-height: 1.5;
    padding: 5px 10px;
    transition: box-shadow 100ms ease-in, border 100ms ease-in, background-color 100ms ease-in;
    border: 2px solid #dee1e2;
    color: rgb(14, 14, 16);
    background: #dee1e2;
    display: block;
    height: 36px;
    margin: 10px 0;
}

.form__field:hover {
    border-color: #ccc;
}

.form__field:focus {
    border-color: #9147ff;
    background: #fff;
}




.checkbox-wrapper-14 input[type=checkbox] {
    --active: #275EFE;
    --active-inner: #fff;
    --focus: 2px rgba(39, 94, 254, .3);
    --border: #BBC1E1;
    --border-hover: #275EFE;
    --background: #fff;
    --disabled: #F6F8FF;
    --disabled-inner: #E1E6F9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 21px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
}

.checkbox-wrapper-14 input[type=checkbox]:after {
    content: "";
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
}

.checkbox-wrapper-14 input[type=checkbox]:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: .3s;
    --d-t: .6s;
    --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
}

.checkbox-wrapper-14 input[type=checkbox]:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: 0.9;
}

.checkbox-wrapper-14 input[type=checkbox]:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
}

.checkbox-wrapper-14 input[type=checkbox]:disabled+label {
    cursor: not-allowed;
}

.checkbox-wrapper-14 input[type=checkbox]:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
}

.checkbox-wrapper-14 input[type=checkbox]:focus {
    box-shadow: 0 0 0 var(--focus);
}

.checkbox-wrapper-14 input[type=checkbox]:not(.switch) {
    width: 21px;
}

.checkbox-wrapper-14 input[type=checkbox]:not(.switch):after {
    opacity: var(--o, 0);
}

.checkbox-wrapper-14 input[type=checkbox]:not(.switch):checked {
    --o: 1;
}

.checkbox-wrapper-14 input[type=checkbox]+label {
    display: inline-block;
    vertical-align: middle;
    cursor: pointer;
    margin-left: 4px;
}

.checkbox-wrapper-14 input[type=checkbox]:not(.switch) {
    border-radius: 7px;
}

.checkbox-wrapper-14 input[type=checkbox]:not(.switch):after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 7px;
    top: 4px;
    transform: rotate(var(--r, 20deg));
}

.checkbox-wrapper-14 input[type=checkbox]:not(.switch):checked {
    --r: 43deg;
}

.checkbox-wrapper-14 input[type=checkbox].switch {
    width: 38px;
    border-radius: 11px;
}

.checkbox-wrapper-14 input[type=checkbox].switch:after {
    left: 2px;
    top: 2px;
    border-radius: 50%;
    width: 17px;
    height: 17px;
    background: var(--ab, var(--border));
    transform: translateX(var(--x, 0));
}

.checkbox-wrapper-14 input[type=checkbox].switch:checked {
    --ab: var(--active-inner);
    --x: 17px;
}

.checkbox-wrapper-14 input[type=checkbox].switch:disabled:not(:checked):after {
    opacity: 0.6;
}


.checkbox-wrapper-14 * {
    box-sizing: inherit;
}

.checkbox-wrapper-14 *:before,
.checkbox-wrapper-14 *:after {
    box-sizing: inherit;
}




.submit__button {
    display: inline-block;
    outline: 0;
    border: 0;
    cursor: pointer;
    color: #fff;
    font-weight: 500;
    border-radius: 10px;
    font-size: 20px;
    height: 40px;
    padding: 0px 15px;
    text-shadow: rgb(0 0 0 / 25%) 0px 3px 8px;
    background: linear-gradient(92.88deg, rgb(69, 94, 181) 9.16%, rgb(86, 67, 204) 43.89%, rgb(103, 63, 215) 64.72%);
    transition: all 0.5s ease 0s;
    margin: 10px 0;
}

.submit__button:hover {
    box-shadow: rgb(80 63 205 / 50%) 0px 1px 40px;
    transition: all 0.1s ease 0s;
}