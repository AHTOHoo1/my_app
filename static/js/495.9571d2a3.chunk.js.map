{"version":3,"file":"static/js/495.9571d2a3.chunk.js","mappings":"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","sources":["components/profile_info/ProfileStatusWithHooks.jsx","components/profile_info/ProfileDataForm.jsx","components/profile_info/Profile_info.jsx","components/prof_posts/post/post.jsx","components/prof_posts/MyPosts.jsx","components/prof_posts/MyPostsContainer.jsx","components/Profile.jsx","components/ProfileContainer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './info_style.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <dir>\r\n                    <span onClick={activateEditMode} >Status: {props.status}</span>\r\n                </dir>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input className=\"status__input\" value={status} onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import { Field, Form, Formik } from \"formik\";\r\nimport \"./info_style.css\"\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n    let saveProfileData = (values) => {\r\n        props.onSubmit(values)\r\n    }\r\n    let con = props.profile.contacts;\r\n\r\n    return (\r\n        <div>\r\n            <Formik initialValues={{ fullName: props.profile.fullName, \r\n                                    lookingForAJob: props.profile.lookingForAJob, \r\n                                    lookingForAJobDescription: props.profile.lookingForAJobDescription, \r\n                                    aboutMe: props.profile.aboutMe,\r\n                                    contacts: {\r\n                                        facebook: con.facebook,\r\n                                        website: con.website,\r\n                                        vk: con.vk,\r\n                                        twitter: con.twitter,\r\n                                        instagram: con.instagram,\r\n                                        youtube: con.youtube,\r\n                                        github: con.github,\r\n                                        mainLink: con.mainLink\r\n                                    } }} onSubmit={saveProfileData} >\r\n                    <Form >\r\n                        <div className='about_me' >Name: <Field type='input' name='fullName' className=\"change_data_form\" /></div>\r\n                        <div className='about_me'>○ Looking for a job? <Field type='checkbox' name='lookingForAJob' className=\"profile_checkbox\" /> </div>\r\n                        <div className='about_me' >○ My skills: <Field type='textarea' name='lookingForAJobDescription' className=\"change_data_form\" /> </div>\r\n                        <div className='about_me' >○ About me: <Field type='textarea' name='aboutMe' className=\"change_data_form\" /> </div>\r\n                        <div className='about_me' >○ Contacts: {Object.keys(props.profile.contacts).map(key => {\r\n                            return <div>{key}: {<Field name={'contacts.' + key} type='input' className=\"change_data_form\" />}</div>\r\n                        })}</div>\r\n                        <div>\r\n                            <button type=\"submit\" className=\"change_data_button\" ><img alt=\"change_data\" width={30} src=\"https://www.pngkey.com/png/full/445-4453331_checkmark-check-mark-in-a-circle.png\" /></button>\r\n                            <button onClick={props.deactiveActiveMode} className=\"change_data_button\" ><img alt=\"change_data\" width={30} src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f0/Phoenician_teth.svg/1024px-Phoenician_teth.svg.png\" /></button>\r\n                        </div>\r\n                    </Form>\r\n            </Formik>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileDataForm;\r\n\r\n/**/\r\n\r\n/**/\r\n","import Preloader from '../common/preloader/Preloader';\r\nimport './info_style.css';\r\nimport userPhoto from '../../assets/images/user_icon.webp';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMailPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    let onSubmit = (values) => {\r\n        //console.log(values)\r\n        props.saveProfile(values)\r\n        setEditMode(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className='prof__info'>\r\n                <div><img src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto} className='ava__img' alt='ava' width={200} height={200} />\r\n                    {props.isOwner && <div className='upload_file_block'>\r\n                        <label htmlFor=\"file-upload\"><img src='https://cdn-icons-png.flaticon.com/128/1092/1092216.png' className='upload_file_img' alt='upload_file_img' /></label>\r\n                        <input type='file' id=\"file-upload\" name=\"file-upload\" onChange={onMailPhotoSelected} />\r\n                    </div>}</div>\r\n                <div className='about'>\r\n                    \r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n                    {editMode ? <ProfileDataForm {...props} onSubmit={onSubmit} deactiveActiveMode={() => {setEditMode(false)}} /> \r\n                    : <ProfileData {...props} activeEditMode={() => {setEditMode(true)}} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div>\r\n            <div className='about_me' >Name: {props.profile.fullName}</div>\r\n            <div className='about_me'>○ Looking for a job: {props.profile.lookingForAJob ? 'Yes, for sure' : 'No no no'}</div>\r\n            {props.lookingForAJob && <div className='about_me' >○ About me: {props.profile.aboutMe} </div>}\r\n            <div className='about_me' >○ About me: {props.profile.aboutMe}</div>\r\n            <div className='about_me' >○ Contacts: {Object.keys(props.profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\r\n            })}</div>\r\n            {props.isOwner && <button onClick={props.activeEditMode} className='change_data_button' ><img alt='change_data' width={30} src='https://www.freeiconspng.com/thumbs/edit-icon-png/edit-icon-png-24.png' /></button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className='about_me' >{contactTitle}: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n/*\r\n<img src='https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg' alt='shapka' className='prof__img'/>\r\n*/","import { useState } from 'react';\r\nimport './post_style.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    let [value, setValue] = useState(props.likes, props.id);\r\n    let plusLike = () => {\r\n        setValue(value + 1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='post__item'>\r\n                <img src='https://cdn-icons-png.flaticon.com/512/1053/1053244.png' alt='avatarka' className='post__ava' />\r\n                <div className='post__text'>{ props.text }</div>\r\n                <div>\r\n                    <button className='like__btn' onClick={plusLike} >\r\n                        <img src='https://cdn-icons-png.flaticon.com/512/57/57602.png' alt='like_img' className='like__img'/>\r\n                        <span>{ value }</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import './MyPosts_styles.css'\r\nimport Post from './post/post'\r\nimport React from 'react'\r\nimport { Field, Form, Formik } from 'formik'\r\n\r\nconst validatePost = (value) => {\r\n    if (!value) {\r\n        return '☼ Required!';\r\n    } else if (value.length > 30) {\r\n        return 'Max length is 30 simbols(';\r\n    }\r\n}\r\n\r\nconst MyPosts = React.memo(props => {\r\nconsole.log(\"render\")\r\n\r\n    let PostsElements = props.posts\r\n    .map(p => <Post text={p.text} likes={p.likes} key={p.id} />)\r\n\r\n    let addNewPost = (values, {resetForm}) => {\r\n        props.addPost(values.post)\r\n        resetForm()\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2>My posts</h2>\r\n                <div>\r\n                    <Formik initialValues={{ post: \"\" }} onSubmit={addNewPost}>\r\n                        {({ errors, touched }) => (\r\n                            <Form>\r\n                                <div>\r\n                                    <Field className={errors.post && touched.post ? \"text__input_error\" : \"text__input\"}\r\n                                        component=\"textarea\"\r\n                                        name=\"post\"\r\n                                        validate={validatePost}\r\n                                        placeholder='Enter your text' />\r\n                                </div>\r\n                                {errors.post && touched.post && (\r\n                                    <div>{errors.post}</div>\r\n                                )}\r\n                                <div>\r\n                                    <button className='btn'\r\n                                        type='submit'>Add post</button>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n                <div className='posts'>\r\n                    {PostsElements}\r\n                </div>\r\n            </div >\r\n        </div >\r\n    )\r\n})\r\n\r\nexport default MyPosts\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { addPost } from '../../redux/profile_reducer';\r\nimport MyPosts from './MyPosts'\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost}),\r\n    withAuthRedirect\r\n)(MyPosts);\r\n","import './../App.css'\r\nimport ProfileInfo from './profile_info/Profile_info'\r\nimport MyPostsContainer from './prof_posts/MyPostsContainer'\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner} \r\n                        savePhoto={props.savePhoto} \r\n                        profile={props.profile} \r\n                        status={props.status} \r\n                        updateStatus={props.updateStatus}\r\n                        saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { setUserProfile, getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../redux/profile_reducer';\r\nimport './../App.css'\r\nimport Profile from './Profile';\r\n\r\n\r\nconst withRouter = WrappedComponent => props => {\r\n    const params = useParams();\r\n    return (\r\n        <WrappedComponent {...props} params={params} />\r\n    )\r\n}\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.profileId\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.params.userId !== prevProps.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                    isOwner={!this.props.params.userId}\r\n                    profile={this.props.profile} \r\n                    status={this.props.status} \r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                    /*saveProfile={this.props.saveProfile}*/ />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    profileId: state.auth.id\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setUserProfile,\r\n        getUserProfile,\r\n        updateStatus,\r\n        getStatus,\r\n        savePhoto,\r\n        saveProfile\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n\r\n)(ProfileContainer)\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","className","value","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","con","profile","contacts","initialValues","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","facebook","website","vk","twitter","instagram","youtube","github","mainLink","onSubmit","values","type","name","Object","keys","map","key","alt","width","src","deactiveActiveMode","ProfileData","Contact","contactTitle","contactValue","isOwner","activeEditMode","Preloader","photos","large","userPhoto","height","htmlFor","id","target","files","length","savePhoto","saveProfile","likes","setValue","text","validatePost","React","console","log","PostsElements","posts","p","post","resetForm","addPost","errors","touched","component","validate","placeholder","compose","connect","state","profilePage","newPostText","withAuthRedirect","MyPosts","MyPostsContainer","ProfileContainer","userId","this","params","profileId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","auth","setUserProfile","WrappedComponent","useParams"],"sourceRoot":""}