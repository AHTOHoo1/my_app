{"version":3,"file":"static/js/797.29aa43ad.chunk.js","mappings":"gNAEMA,EAAU,SAAAA,GAAO,OAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,GAAY,YAElDC,EAAWF,EAAKG,SAAWH,EAAKI,MAEpC,OACI,2BACMF,IAAY,0BAAOF,EAAKI,SAC9B,gBAAKC,UAAW,kBAAyBH,EAAW,QAAU,IAA9D,UACI,SAAC,GAAD,kBAAaH,GAAWE,WAOvBK,EAAWR,EAAQ,YAGnBS,EAAQT,EAAQ,U,4JCavBU,GAAiBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,SAAlBD,EAvBL,SAACR,GACf,OACI,kBAAMU,SAAUV,EAAMW,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,YAAY,QAAQC,KAAM,QAASC,UAAWT,EAAAA,EAAOU,SAAU,CAACC,EAAAA,GAAWb,UAAU,mBAEhG,0BACI,SAACQ,EAAA,EAAD,CAAOC,YAAY,WAAWC,KAAM,WAAYI,KAAK,WAAWH,UAAWT,EAAAA,EAAOU,SAAU,CAACC,EAAAA,GAAWb,UAAU,mBAEtH,iBAAKA,UAAU,sBAAf,WACI,SAACQ,EAAA,EAAD,CAAOM,KAAM,WAAYJ,KAAM,cAAeC,UAAWT,EAAAA,EAAOF,UAAU,SAASe,GAAG,UAD1F,mBAGEnB,EAAMG,QAAS,yBAAMH,EAAMG,QAC3BH,EAAMoB,aAAc,4BAAK,0BAAK,gBAAKC,IAAKrB,EAAMoB,WAAYE,IAAI,qBAChE,0BAAK,SAACV,EAAA,EAAD,CAAOG,UAAWT,EAAAA,EAAOQ,KAAM,UAAWD,YAAY,UAAUT,UAAU,sBAE/E,0BACI,mBAAQA,UAAU,iBAAlB,6BAgChB,GAAemB,EAAAA,EAAAA,KAPO,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OACnBL,WAAYI,EAAME,KAAKN,cAIS,CAAEO,MAAAA,EAAAA,IAA1C,EAxBc,SAAC3B,GAKX,OAAIA,EAAMyB,QACC,SAAC,KAAD,CAAUG,GAAI,cAIrB,4BACI,mCACA,SAACrB,EAAD,CAAgBG,SAXP,SAACmB,GACd7B,EAAM2B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,YAAaH,EAASI,UAUtCb,WAAYpB,EAAMoB,oB,4EC/C3D,IAAMH,EAAW,SAAAiB,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAO,CAAC,iBAAkBA,EAAW","sources":["components/common/FormControl/FormControl.js","components/login/Login.jsx","validators.js"],"sourcesContent":["import './form.css'\r\n\r\nconst Element = Element => ({ input, meta, ...props }) => {\r\n\r\n    let hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div>\r\n            { hasError && <span>{meta.error}</span> }\r\n        <div className={'form__control' + ' ' + (hasError ? 'error' : '')}>\r\n            <Element {...input} {...props}  />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = Element(\"textarea\")\r\n\r\n\r\nexport const Input = Element(\"input\")\r\n","import './login.css';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../common/FormControl/FormControl';\r\nimport { required } from '../../validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth_reducer';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div >\r\n                <Field placeholder='Email' name={\"email\"} component={Input} validate={[required]} className='form__field' />\r\n            </div>\r\n            <div >\r\n                <Field placeholder='Password' name={\"password\"} type=\"password\" component={Input} validate={[required]} className='form__field' />\r\n            </div>\r\n            <div className='checkbox-wrapper-14'>\r\n                <Field type={'checkbox'} name={\"remember_me\"} component={Input} className='switch' id=\"s1-14\"/> Remember me?\r\n            </div>\r\n            { props.error && <div>{props.error}</div> }\r\n            { props.captchaUrl && <div><div><img src={props.captchaUrl} alt='login_captcha' /></div>\r\n            <div><Field component={Input} name={'captcha'} placeholder='Captcha' className='form__field' /></div></div> }\r\n\r\n            <div>\r\n                <button className='submit__button'>Sign in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.remember_me, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return ['Max length is ', maxLength, ' simbols'];\r\n    return undefined;\r\n}\r\n"],"names":["Element","input","meta","props","hasError","touched","error","className","Textarea","Input","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","validate","required","type","id","captchaUrl","src","alt","connect","state","isAuth","auth","login","to","formData","email","password","remember_me","captcha","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}